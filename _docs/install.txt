>useful
symfony server:start -d
symfony server:start --no-tls -d (for mercure)
php bin/console cache:clear

php bin/console make:user
php bin/console make:auth
php bin/console make:entity
php bin/console make:controller
php bin/console make:form

php bin/console doctrine:migrations:diff
php bin/console doctrine:migration:migrate
php bin/console doctrine:fixtures:load --purge-with-truncate

php bin/console security:hash-password

php bin/console debug:autowiring
php bin/console cache:clear

>crée une lignée ctrl+form+twig
php bin/console make:crud

>tout refaire
php bin/console doctrine:database:drop --force
php bin/console doctrine:database:create
php bin/console make:migration
php bin/console doctrine:migration:migrate
php bin/console doctrine:fixtures:load

install
-------

scoop install symfony-cli
scoop update symfony-cli
symfony check:requirements

>for apis, from the /home folder, create "oc7":
>see: https://symfony.com/doc/current/setup.html
symfony new oc7c --version="7.0.*"

>connect to github
git remote add a2d https://github.com/agence2dav/oc7.git
git remote -v
>Master=main
git branch -M main

>boot devserver
symfony server:start -d

>make builder
composer require symfony/maker-bundle --dev

>orm-pack
composer require symfony/orm-pack

>refresh
composer update

>set .env.local
DATABASE_URL="mysql://root:password@127.0.0.1:3306/oc7"

>create database
php bin/console doctrine:database:create

>debug
composer require symfony/debug-bundle

>profiler
composer require --dev symfony/profiler-pack

>security
composer require security

> ux-turbo
composer require symfony/ux-turbo

>users
php bin/console make:user
set: username as unique
have password: yes

>entities
php bin/console make:entity

>migrate changes
php bin/console make:migration
php bin/console doctrine:migration:migrate

>fixtures
composer require orm-fixtures --dev
php bin/console make:fixtures
php bin/console doctrine:fixtures:load

>faker
composer require fakerphp/faker

>auth
php bin/console make:auth

>login-form
composer require symfonycasts/verify-email-bundle
php bin/console make:registration-form
composer require symfonycasts/reset-password-bundle
php bin/console make:reset-password

>components
composer require symfony/cache
composer require symfony/validator
composer require symfony/validator doctrine/annotations

>components
>from: https://symfony.com/download
composer require symfony/http-kernel
composer require symfony/http-foundation
composer require symfony/http-client
composer require doctrine/annotations
composer require symfony/asset
composer require symfony/asset-mapper
composer require symfony/cache
composer require symfony/config
composer require symfony/console
composer require symfony/doctrine-bridge
composer require symfony/dotenv
composer require symfony/error-handler
composer require symfony/event-dispatcher
composer require symfony/string
composer require symfony/yaml
composer require symfony/property-access
composer require symfony/property-info
composer require symfony/runtime
composer require symfony/security-bundle
composer require symfony/serializer
composer require symfony/validator
composer require twig/twig
composer require twig/extra-bundle
composer require symfony/twig-bundle
composer require ext-ctype
composer require ext-iconv

>paramconverter (déduit la requête d'après l'url - obsolete)
composer require sensio/framework-extra-bundle

>serializer
composer require symfony/serializer
composer require symfony/serializer-pack

**
//composer require willdurand/hateoas-bundle
//composer require zircote/swagger-php
composer require lexik/jwt-authentication-bundle --with-all-dependencies

>create api (use notation to create links)
symfony composer req api !!!do not use that!!!

>exceptions
php bin/console make:subscriber
>choose:
- ExceptionSubscriber
- kernel.exception

>jwt
composer require security
add extension=php_sodium.dll to php.ini
composer require lexik/jwt-authentication-bundle

>generate keys
openssl genpkey -out config/jwt/private.pem -aes256 -algorithm rsa -pkeyopt rsa_keygen_bits:4096
openssl pkey -in config/jwt/private.pem -out config/jwt/public.pem -pubout

>passphrase private
dddd

>token




